var e = require("typescript");

var a = require("node:path");

var r = require("@gql.tada/internal");

var i = require("@0no-co/graphqlsp/api");

var t = require("./index-chunk.js");

function _interopNamespaceDefault(e) {
  var a = Object.create(null);
  if (e) {
    Object.keys(e).forEach((function(r) {
      if ("default" !== r) {
        var i = Object.getOwnPropertyDescriptor(e, r);
        Object.defineProperty(a, r, i.get ? i : {
          enumerable: !0,
          get: function() {
            return e[r];
          }
        });
      }
    }));
  }
  a.default = e;
  return a;
}

var n = _interopNamespaceDefault(a);

var o = t.expose((async function* _runDiagnostics(a) {
  var o = n.dirname(a.configPath);
  var l = t.programFactory(a);
  var s = l.createExternalFiles();
  if (s.length) {
    yield {
      kind: "EXTERNAL_WARNING"
    };
    await l.addVirtualFiles(s);
  }
  var g = await r.loadRef(a.pluginConfig).load({
    rootPath: o
  });
  var c = l.build();
  var f = c.buildPluginInfo(a.pluginConfig);
  var u = c.getSourceFiles();
  yield {
    kind: "FILE_COUNT",
    fileCount: u.length
  };
  for (var d of u) {
    var v = d.fileName.endsWith(".vue.ts") || d.fileName.endsWith(".svelte.ts");
    var p = d.fileName;
    f.config = {
      ...f.config,
      shouldCheckForColocatedFragments: v ? !1 : f.config.shouldCheckForColocatedFragments ?? !1,
      trackFieldUsage: v ? !1 : f.config.trackFieldUsage ?? !1
    };
    var h = i.getGraphQLDiagnostics(p, g, f);
    var m = [];
    if (h && h.length) {
      for (var y of h) {
        if (!("messageText" in y) || "string" != typeof y.messageText || !y.file) {
          continue;
        }
        var C = "info";
        if (y.category === e.DiagnosticCategory.Error) {
          C = "error";
        } else if (y.category === e.DiagnosticCategory.Warning) {
          C = "warn";
        }
        var F = c.getSourcePosition(d, {
          start: y.start || 1,
          length: y.length || 1
        });
        p = F.fileName;
        m.push({
          severity: C,
          message: y.messageText,
          file: F.fileName,
          line: F.line,
          col: F.col,
          endLine: F.endLine,
          endColumn: F.endColumn
        });
      }
    }
    yield {
      kind: "FILE_DIAGNOSTICS",
      filePath: p,
      messages: m
    };
  }
}));

exports.runDiagnostics = o;
//# sourceMappingURL=thread-chunk3.js.map
